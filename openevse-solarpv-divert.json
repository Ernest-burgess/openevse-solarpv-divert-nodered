[
  {
    "id": "a9343c92.13fea",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate  4kw (16.7A)",
    "topic": "solar",
    "payload": "4000",
    "payloadType": "num",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 209,
    "y": 190,
    "wires": [
      [
        "fbf6db3e.617c78"
      ]
    ]
  },
  {
    "id": "95ddea87.f04138",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate  100W (0.42A)",
    "topic": "solar",
    "payload": "100",
    "payloadType": "str",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 208,
    "y": 259,
    "wires": [
      [
        "fbf6db3e.617c78"
      ]
    ]
  },
  {
    "id": "8c0406c9.426988",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate  1: Eco",
    "topic": "mode",
    "payload": "1",
    "payloadType": "num",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 189,
    "y": 823,
    "wires": [
      [
        "72578929.c548e8"
      ]
    ]
  },
  {
    "id": "bec6108d.5fbda",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate  2: Eco+",
    "topic": "mode",
    "payload": "2",
    "payloadType": "num",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 187,
    "y": 856,
    "wires": [
      [
        "72578929.c548e8"
      ]
    ]
  },
  {
    "id": "dd6374c.103c188",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate  3: Normal Charge (default)",
    "topic": "mode",
    "payload": "3",
    "payloadType": "num",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 248,
    "y": 892,
    "wires": [
      [
        "72578929.c548e8"
      ]
    ]
  },
  {
    "id": "12eaf689.a80cb9",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate  4kw use",
    "topic": "use",
    "payload": "4000",
    "payloadType": "num",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 188,
    "y": 459,
    "wires": [
      [
        "975b23a0.0ff0a"
      ]
    ]
  },
  {
    "id": "fdf1cbda.f605d8",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate  2Kw use",
    "topic": "use",
    "payload": "2000",
    "payloadType": "str",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 186,
    "y": 494,
    "wires": [
      [
        "975b23a0.0ff0a"
      ]
    ]
  },
  {
    "id": "d9cac7e7.d0ec08",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate  100W use",
    "topic": "use",
    "payload": "100",
    "payloadType": "str",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 196,
    "y": 529,
    "wires": [
      [
        "975b23a0.0ff0a"
      ]
    ]
  },
  {
    "id": "3dbaa5c4.dc9b3a",
    "type": "function",
    "z": "748c9597.a3803c",
    "name": "Calculate charge current",
    "func": "\n// Load defaults\nvar vrms = global.get(\"vrms\");\nvar solar = global.get(\"solar\");\nvar use = global.get(\"use\");\nvar excess = global.get(\"excess\");\nvar max_charge_current = global.get(\"max_charge_current\");\nvar min_charge_current = global.get(\"min_charge_current\");\nvar charge_current = max_charge_current;\nvar mode = global.get(\"mode\");\nvar state = global.get(\"state\");\n\n// Get VRMS voltage\nif (msg.topic === \"vrms\") {\n    vrms = msg.payload;\n    global.set(\"vrms\",vrms);\n}\n\n// Get Solar PV gen & Convert to current (A)\nif (msg.topic === \"solar\") {\n    solar = msg.payload / vrms;\n    global.set(\"solar\",solar)\n}\n\n// Get on-site consumption & Convert to current (A)\nif (msg.topic === \"use\") {\n    use = msg.payload / vrms;\n    global.set(\"use\",use)\n}\n\n\n// Eco Mode\nif (mode == 1){\n    if (solar >= min_charge_current){\n        charge_current = solar;\n    }\n    else {\n        charge_current = min_charge_current;\n    }\n}\n\n// Eco+ Mode\nif (mode == 2){\n    excess = solar - use;\n    if (excess >= min_charge_current){\n        charge_current = excess;\n    }\n    else {\n        // Pause charging if no excess current\n        charge_current = 0; \n    }\n}\n\n// Normal Charge\nif (mode == 3){\n    charge_current = max_charge_current;\n}\n\ncharge_current=Math.round(charge_current);\n    \nreturn [{payload: charge_current}, {payload: mode}, {payload:state}];\n",
    "outputs": "3",
    "noerr": 0,
    "x": 658.6666564941406,
    "y": 422.6666736602783,
    "wires": [
      [
        "62c5536f.43d2ec",
        "59e19785.f166c8"
      ],
      [
        "b231b137.69bfe"
      ],
      [
        "62d329e.5b49ad8"
      ]
    ]
  },
  {
    "id": "e143790f.9d3cc8",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate  2kw (8.3A)",
    "topic": "solar",
    "payload": "2000",
    "payloadType": "num",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 198,
    "y": 224,
    "wires": [
      [
        "fbf6db3e.617c78"
      ]
    ]
  },
  {
    "id": "21190907.57c316",
    "type": "comment",
    "z": "748c9597.a3803c",
    "name": "INPUT SOLAR PV (topic: solar)",
    "info": "Solar PV generation\n\n*Must always be positive*\n\n## Input Options \n\n*Configure as appropriate*\n\n### MQTT\n\n- emonPi MQTT server username: `emonpimqtt` password: `emonpimqtt2016`\n- emonPi default topic `emon/emonpi/power1`\n- emonTx (node 8) default topic `emon/emontx3/power1`\n\n### Emoncms\n\n- Configure node with Host, read API key and feed ID\n- https://emoncms.org",
    "x": 189,
    "y": 42,
    "wires": []
  },
  {
    "id": "8cf81b6f.22cde8",
    "type": "comment",
    "z": "748c9597.a3803c",
    "name": "INPUT CONSUMPTION (topic: use)",
    "info": "Onsite consumption\n\n*Must always be positive*\n\n## Input Options \n\n*Configure as appropriate*\n\n### MQTT\n\n- emonPi MQTT server username: `emonpimqtt` password: `emonpimqtt2016`\n- emonPi default topic `emon/emonpi/power2`\n- emonTx (node 8) default topic `emon/emontx3/power2`\n\n### Emoncms\n\n- Configure node with Host, read API key and feed ID\n- https://emoncms.org",
    "x": 191,
    "y": 314,
    "wires": []
  },
  {
    "id": "b16b4186.7cad6",
    "type": "comment",
    "z": "748c9597.a3803c",
    "name": "INPUT CHARGING MODE (topic: mode)",
    "info": "",
    "x": 213,
    "y": 729,
    "wires": []
  },
  {
    "id": "4f94ba59.662024",
    "type": "comment",
    "z": "748c9597.a3803c",
    "name": "INPUT VRMS (topic: vrms)",
    "info": "VRMS voltage\n\nDefault 240V if no rms data is received\n\n## Input Options \n\n*Configure as appropriate*\n\n### MQTT\n\n- emonPi MQTT server username: `emonpimqtt` password: `emonpimqtt2016`\n- emonPi default topic `emon/emonpi/vmrs`\n- emonTx (node 8) default topic `emon/emontx3/vrms`\n\n### Emoncms\n\n- Configure node with Host, read API key and feed ID\n- https://emoncms.org",
    "x": 159,
    "y": 572,
    "wires": []
  },
  {
    "id": "62c5536f.43d2ec",
    "type": "debug",
    "z": "748c9597.a3803c",
    "name": "Charging Current debug",
    "active": false,
    "console": "false",
    "complete": "payload",
    "x": 965,
    "y": 501,
    "wires": []
  },
  {
    "id": "b231b137.69bfe",
    "type": "debug",
    "z": "748c9597.a3803c",
    "name": "Mode debug",
    "active": false,
    "console": "false",
    "complete": "payload",
    "x": 926,
    "y": 545,
    "wires": []
  },
  {
    "id": "2949e944.19fea6",
    "type": "function",
    "z": "748c9597.a3803c",
    "name": "Set charging mode",
    "func": "if (msg.topic === \"mode\"){\n    global.set(\"mode\",msg.payload);\n}\n\nreturn msg;\n",
    "outputs": 1,
    "noerr": 0,
    "x": 658,
    "y": 488,
    "wires": [
      [
        "b231b137.69bfe"
      ]
    ]
  },
  {
    "id": "5559d739.e94778",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "Inject at startup",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "",
    "crontab": "",
    "once": true,
    "x": 493,
    "y": 98,
    "wires": [
      [
        "e48d7d6e.5a731"
      ]
    ]
  },
  {
    "id": "e48d7d6e.5a731",
    "type": "function",
    "z": "748c9597.a3803c",
    "name": "Set default values",
    "func": "// Default to normal charge mode\nglobal.set(\"mode\",3);\n\n// Set min & max charging current (A)\n// If max charge current is greater than the max  \n// allowed current set in OpenEVSE charge rate will be max allowed\nglobal.set(\"max_charge_current\",32);\n\n// 6A min is defined by SAE/IEC standard\nglobal.set(\"min_charge_current\",6);\n\n// Charge current can be varied in 1A increments as defined by SAE/IEC\n\n// Default VRMS voltage\nglobal.set(\"vrms\",240);\n\n\n// Default to 'charging' state unless overwritten\nglobal.set(\"state\",3);\n// 1: Not Connected\n// 2: Connected\n// 3: Charging \n// 4-10: Error \n// 254: Sleeping\n// 255: Disabled\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "x": 725,
    "y": 97,
    "wires": [
      []
    ]
  },
  {
    "id": "9911b61f.85b9b8",
    "type": "function",
    "z": "748c9597.a3803c",
    "name": "Generate RAPI",
    "func": "var rapi_chargerate = \"$SC\";\nvar rapi_pause = \"$FS\";\nvar rapi_resume = \"$FE\";\nvar rapi =\"\";\nvar charge_rate = msg.payload;\nvar state = global.get(\"state\");\n\n// STATE\n// 1: Not Connected\n// 2: Connected\n// 3: Charging \n// 4-10: Error \n// 254: Sleeping\n// 255: Disabled\n\nif ((msg.payload === 0) && (state == 3)){\n    // pause charging if charging & charging rate = 0 \n    // Set sleeping state\n    state = 254;\n    global.set(\"state\",state)\n    rapi = {payload: rapi_pause};\n}\nif (msg.payload !== 0) {\n    if (state == 254){\n        // Resume / start charging if charging is paused\n        rapi = {payload: rapi_resume};\n        // Set charging state\n        state = 3;\n        global.set(\"state\",state)\n        return rapi;\n    }\n    if (state ==3){ \n        // If state==charging (default) set charge rate\n        rapi = {payload: rapi_chargerate + \" \" + charge_rate};\n    }\n}\nreturn rapi;",
    "outputs": 1,
    "noerr": 0,
    "x": 685.2500686645508,
    "y": 272.2500047683716,
    "wires": [
      [
        "27b73799.ffe708",
        "216c1f2f.3fe03"
      ]
    ]
  },
  {
    "id": "27b73799.ffe708",
    "type": "debug",
    "z": "748c9597.a3803c",
    "name": "RAPI Debug",
    "active": true,
    "console": "false",
    "complete": "payload",
    "x": 926,
    "y": 466,
    "wires": []
  },
  {
    "id": "216c1f2f.3fe03",
    "type": "delay",
    "z": "748c9597.a3803c",
    "name": "",
    "pauseType": "rate",
    "timeout": "5",
    "timeoutUnits": "seconds",
    "rate": "1",
    "nbRateUnits": "10",
    "rateUnits": "second",
    "randomFirst": "1",
    "randomLast": "5",
    "randomUnits": "seconds",
    "drop": true,
    "x": 700.0000076293945,
    "y": 185.75000381469727,
    "wires": [
      [
        "f8d65daf.bc78f",
        "e9132194.36b34",
        "7f7dc80a.853b78"
      ]
    ]
  },
  {
    "id": "62b44526.37e0ec",
    "type": "comment",
    "z": "748c9597.a3803c",
    "name": "INPUT OPENEVSE STATE (topic: state)",
    "info": "## STATES\n\n- 1: Not Connected\n- 2: Connected\n- 3: Charging \n- 4-10: Error \n- 254: Sleeping\n- 255: Disabled",
    "x": 210,
    "y": 951,
    "wires": []
  },
  {
    "id": "38775660.36996a",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate 3: Charging",
    "topic": "state",
    "payload": "3",
    "payloadType": "num",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 194,
    "y": 1071,
    "wires": [
      [
        "4fd450ce.0cac3"
      ]
    ]
  },
  {
    "id": "1d1c0050.8ba79",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate  2: Connected",
    "topic": "state",
    "payload": "2",
    "payloadType": "num",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 205,
    "y": 1035,
    "wires": [
      [
        "4fd450ce.0cac3"
      ]
    ]
  },
  {
    "id": "87c4f9c.bd3ed08",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "DEBUG: Simulate  254: Sleeping",
    "topic": "state",
    "payload": "254",
    "payloadType": "num",
    "repeat": "",
    "crontab": "",
    "once": false,
    "x": 203,
    "y": 1107,
    "wires": [
      [
        "4fd450ce.0cac3"
      ]
    ]
  },
  {
    "id": "db295cde.368ca",
    "type": "function",
    "z": "748c9597.a3803c",
    "name": "Set charging state",
    "func": "if (msg.topic === \"state\"){\n    global.set(\"state\",msg.payload);\n}\n\nreturn msg;\n",
    "outputs": 1,
    "noerr": 0,
    "x": 665,
    "y": 537,
    "wires": [
      [
        "62d329e.5b49ad8"
      ]
    ]
  },
  {
    "id": "62d329e.5b49ad8",
    "type": "debug",
    "z": "748c9597.a3803c",
    "name": "State debug",
    "active": false,
    "console": "false",
    "complete": "payload",
    "x": 931,
    "y": 587,
    "wires": []
  },
  {
    "id": "8294c938.daebe8",
    "type": "mqtt in",
    "z": "748c9597.a3803c",
    "name": "",
    "topic": "emon/emonpi/vrms",
    "qos": "2",
    "broker": "5524d7ef.a3d758",
    "x": 235,
    "y": 667,
    "wires": [
      [
        "d96d6742.641378"
      ]
    ]
  },
  {
    "id": "d96d6742.641378",
    "type": "change",
    "z": "748c9597.a3803c",
    "name": "VRMS Input",
    "rules": [
      {
        "t": "set",
        "p": "topic",
        "pt": "msg",
        "to": "vrms",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 438,
    "y": 605,
    "wires": [
      [
        "3dbaa5c4.dc9b3a"
      ]
    ]
  },
  {
    "id": "fbf6db3e.617c78",
    "type": "change",
    "z": "748c9597.a3803c",
    "name": "Solar Input",
    "rules": [
      {
        "t": "set",
        "p": "topic",
        "pt": "msg",
        "to": "solar",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 470,
    "y": 224,
    "wires": [
      [
        "3dbaa5c4.dc9b3a"
      ]
    ]
  },
  {
    "id": "a8fa22c9.2a195",
    "type": "mqtt in",
    "z": "748c9597.a3803c",
    "name": "",
    "topic": "emon/emonpi/power1",
    "qos": "2",
    "broker": "5524d7ef.a3d758",
    "x": 239,
    "y": 84,
    "wires": [
      [
        "fbf6db3e.617c78"
      ]
    ]
  },
  {
    "id": "ece63871.0bc0c8",
    "type": "mqtt in",
    "z": "748c9597.a3803c",
    "name": "",
    "topic": "emon/emonpi/power2",
    "qos": "2",
    "broker": "5524d7ef.a3d758",
    "x": 216,
    "y": 356,
    "wires": [
      [
        "975b23a0.0ff0a"
      ]
    ]
  },
  {
    "id": "975b23a0.0ff0a",
    "type": "change",
    "z": "748c9597.a3803c",
    "name": "Use Input",
    "rules": [
      {
        "t": "set",
        "p": "topic",
        "pt": "msg",
        "to": "use",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 409,
    "y": 449,
    "wires": [
      [
        "3dbaa5c4.dc9b3a"
      ]
    ]
  },
  {
    "id": "63448e78.898c",
    "type": "mqtt in",
    "z": "748c9597.a3803c",
    "name": "",
    "topic": "openevse/mode",
    "qos": "2",
    "broker": "5524d7ef.a3d758",
    "x": 226,
    "y": 779,
    "wires": [
      [
        "72578929.c548e8"
      ]
    ]
  },
  {
    "id": "72578929.c548e8",
    "type": "change",
    "z": "748c9597.a3803c",
    "name": "Mode Input",
    "rules": [
      {
        "t": "set",
        "p": "topic",
        "pt": "msg",
        "to": "mode",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 419,
    "y": 783,
    "wires": [
      [
        "2949e944.19fea6"
      ]
    ]
  },
  {
    "id": "e307629d.b9216",
    "type": "mqtt in",
    "z": "748c9597.a3803c",
    "name": "",
    "topic": "openevse/state",
    "qos": "2",
    "broker": "5524d7ef.a3d758",
    "x": 249,
    "y": 988,
    "wires": [
      [
        "4fd450ce.0cac3"
      ]
    ]
  },
  {
    "id": "4fd450ce.0cac3",
    "type": "change",
    "z": "748c9597.a3803c",
    "name": "State Input",
    "rules": [
      {
        "t": "set",
        "p": "topic",
        "pt": "msg",
        "to": "state",
        "tot": "str"
      }
    ],
    "action": "",
    "property": "",
    "from": "",
    "to": "",
    "reg": false,
    "x": 461,
    "y": 978,
    "wires": [
      [
        "db295cde.368ca"
      ]
    ]
  },
  {
    "id": "5b8543e4.5a078c",
    "type": "comment",
    "z": "748c9597.a3803c",
    "name": "RAPI OUTPUT",
    "info": "\n\n## Output Options \n\n*Configure as appropriate*\n\n**ONLY USE ONE**\n\n### MQTT\n\n- emonPi MQTT server: \n- Username: `emonpimqtt` \n- Password: `emonpimqtt2016`\n- OpenEVSE MQTT topic:\n`base-topic>/rapi/in`\n- Assuming base topic = openevse\n`openevse/rapi/in`\n\n### HTTP\n\n- Enter OpeneEVSE IP address in generate HTTP RAPI function\n- Default host name is http://openevse\n\n### Direct serial \n\n- Via direct serial connection to OpenEVSE using USB to UART cable \n- Default baud 115200\n\nhttp://openevse.dozuki.com/Guide/Serial+Communications+with+OpenEVSE/13\n",
    "x": 1252,
    "y": 200,
    "wires": []
  },
  {
    "id": "f8d65daf.bc78f",
    "type": "function",
    "z": "748c9597.a3803c",
    "name": "Generate RAPI MQTT",
    "func": "// OpenEVSE MQTT topic <base-topic>/rapi/in\n\nvar openevse_mqtt = \"openevse/rapi/in/\";\n\n// split on space\nvar output = msg.payload.split(\" \");\n \nvar rapi_message = output[0];\nvar rapi_payload = output[1];\n\n\nmsg.topic = openevse_mqtt + rapi_message;\nmsg.payload = rapi_payload;\n\nreturn [msg];\n\n\n\n",
    "outputs": 1,
    "noerr": 0,
    "x": 912,
    "y": 155,
    "wires": [
      [
        "49b3c0ad.5c0c6",
        "bd6fa1c3.b3ab9",
        "cb85dd5.5bc5e2"
      ]
    ]
  },
  {
    "id": "39e6dcc8.74b014",
    "type": "http request",
    "z": "748c9597.a3803c",
    "name": "",
    "method": "GET",
    "ret": "txt",
    "url": "",
    "x": 1237.5,
    "y": 309,
    "wires": [
      [
        "c90bb934.f1ddc8"
      ]
    ]
  },
  {
    "id": "e9132194.36b34",
    "type": "function",
    "z": "748c9597.a3803c",
    "name": "Generate HTTP",
    "func": "// Example: http://openevse/r?rapi=%24SC+13\n// Hostname openevse should work on most networks if running latest 2.0 firmware\n// Change openevse to local IP address if needed\n\nvar openevse_http = \"http://openevse/r?rapi=%\";\n\n// split on space\nvar output = msg.payload.split(\" \");\n \nvar rapi_message = output[0];\nvar rapi_payload = output[1];\n// remove $ symbol\nrapi_message = rapi_message.slice( 1 );\n\nif (rapi_payload){\n    msg.payload = openevse_http + rapi_message + \"+\" + rapi_payload;\n}\nelse{\n    // don't include value for RAPI commands with no value e.g FS\n    msg.payload = openevse_http + rapi_message;\n}\n\n\nreturn [msg];\n",
    "outputs": 1,
    "noerr": 0,
    "x": 926,
    "y": 286,
    "wires": [
      [
        "aa02ed49.8e9a3"
      ]
    ]
  },
  {
    "id": "49b3c0ad.5c0c6",
    "type": "debug",
    "z": "748c9597.a3803c",
    "name": "DEBUG: MQTT rapi/in topic",
    "active": false,
    "console": "false",
    "complete": "topic",
    "x": 972,
    "y": 192,
    "wires": []
  },
  {
    "id": "bd6fa1c3.b3ab9",
    "type": "debug",
    "z": "748c9597.a3803c",
    "name": "DEBUG: MQTT rapi/in message",
    "active": false,
    "console": "false",
    "complete": "payload",
    "x": 974,
    "y": 227,
    "wires": []
  },
  {
    "id": "cb85dd5.5bc5e2",
    "type": "mqtt out",
    "z": "748c9597.a3803c",
    "name": "",
    "topic": "",
    "qos": "",
    "retain": "",
    "broker": "5524d7ef.a3d758",
    "x": 1227,
    "y": 248,
    "wires": []
  },
  {
    "id": "aa02ed49.8e9a3",
    "type": "debug",
    "z": "748c9597.a3803c",
    "name": "DEUBG HTTP",
    "active": true,
    "console": "false",
    "complete": "payload",
    "x": 937,
    "y": 322,
    "wires": []
  },
  {
    "id": "e2826c93.27ab4",
    "type": "emoncms in",
    "z": "748c9597.a3803c",
    "name": "Emoncms",
    "feedid": "",
    "x": 282,
    "y": 129,
    "wires": [
      []
    ]
  },
  {
    "id": "44a22df8.f738c4",
    "type": "serial out",
    "z": "748c9597.a3803c",
    "name": "",
    "serial": "25876359.564b1c",
    "x": 1237.5,
    "y": 391,
    "wires": []
  },
  {
    "id": "c90bb934.f1ddc8",
    "type": "debug",
    "z": "748c9597.a3803c",
    "name": "HTTP responce",
    "active": true,
    "console": "false",
    "complete": "payload",
    "x": 1428,
    "y": 290,
    "wires": []
  },
  {
    "id": "8cb82217.b6efa",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "Request update",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "30",
    "crontab": "",
    "once": true,
    "x": 113,
    "y": 129,
    "wires": [
      [
        "e2826c93.27ab4"
      ]
    ]
  },
  {
    "id": "f4e17bc.2462a88",
    "type": "emoncms in",
    "z": "748c9597.a3803c",
    "name": "Emoncms",
    "feedid": "",
    "x": 269,
    "y": 405,
    "wires": [
      []
    ]
  },
  {
    "id": "8c90922b.eb85b",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "Request update",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "30",
    "crontab": "",
    "once": true,
    "x": 100,
    "y": 405,
    "wires": [
      [
        "f4e17bc.2462a88"
      ]
    ]
  },
  {
    "id": "47b31678.77fde8",
    "type": "emoncms in",
    "z": "748c9597.a3803c",
    "name": "Emoncms",
    "feedid": "",
    "x": 264,
    "y": 624,
    "wires": [
      []
    ]
  },
  {
    "id": "cd0e25eb.c43848",
    "type": "inject",
    "z": "748c9597.a3803c",
    "name": "Request update",
    "topic": "",
    "payload": "",
    "payloadType": "date",
    "repeat": "30",
    "crontab": "",
    "once": true,
    "x": 95,
    "y": 619,
    "wires": [
      [
        "47b31678.77fde8"
      ]
    ]
  },
  {
    "id": "7f7dc80a.853b78",
    "type": "function",
    "z": "748c9597.a3803c",
    "name": "Generate Serial",
    "func": "return msg;\n",
    "outputs": 1,
    "noerr": 0,
    "x": 943,
    "y": 388,
    "wires": [
      []
    ]
  },
  {
    "id": "59e19785.f166c8",
    "type": "rbe",
    "z": "748c9597.a3803c",
    "name": "",
    "func": "deadband",
    "gap": "2",
    "start": "",
    "inout": "out",
    "x": 682.9167556762695,
    "y": 336.6666922569275,
    "wires": [
      [
        "9911b61f.85b9b8"
      ]
    ]
  },
  {
    "id": "5524d7ef.a3d758",
    "type": "mqtt-broker",
    "z": "",
    "broker": "localhost",
    "port": "1883",
    "clientid": "",
    "usetls": false,
    "verifyservercert": true,
    "compatmode": true,
    "keepalive": "15",
    "cleansession": true,
    "willTopic": "",
    "willQos": "0",
    "willRetain": "false",
    "willPayload": "",
    "birthTopic": "",
    "birthQos": "0",
    "birthRetain": "false",
    "birthPayload": ""
  }
]
